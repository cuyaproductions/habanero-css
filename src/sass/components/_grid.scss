// Grid System
//
// Habanero has a pretty basic grid system that you can use to you disposal to align elements most effectively.
//
// Styleguide 1

// Container
//
// Unlike past versions of Habanero, it is no longer necessary to have columns inside a `.grid-container` element. This class will now be used to make your design fit within the constraints of a custom vendor page tab.
//
// Markup:
// <div class="grid-container">
//   <div class="col-3">Column 3</div>
//   <div class="col-9">Column 9</div>
// </div>
//
// Styleguide 1.1
.vendor-container {
  .grid-container {
    max-width: 697px;
    margin: 0 auto;
    overflow: hidden;
    box-sizing: border-box;
  }


  // Columns
  //
  // Columns are the building blocks to any development layout.
  //
  // Styleguide 1.2

  // 12 Columns
  //
  // The base grid system is comprised of 12-columns of which can be nested within other columns. *Keep in mind that when nesting columns you're creating a new instance of a 12-column grid*
  //
  // Markup:
  // <div class="row">
  //   <div class="col-6">
  //     Column 6
  //     <div class="row">
  //       <div class="col-5">
  //         Column 5
  //       </div>
  //       <div class="col-7">
  //         Column 7
  //       </div>
  //     </div>
  //   </div>
  //   <div class="col-3">
  //     Column 3
  //   </div>
  //   <div class="col-3">
  //     Column 3
  //   </div>
  // </div>
  //
  // Styleguide 1.2.1
  [class*='col-'] {
    display: inline-block;
    float: left;
    box-sizing: border-box;
  }


  @for $i from 1 through $col-count {
    .col-#{$i} {
      width: col-width($i) - $gutter-size;
      margin-left: $gutter-size / 2;
      margin-right: $gutter-size / 2;
      /* === NO GUTTER === */
      &.nogutter {
        width: col-width($i);
        margin-left: 0;
        margin-right: 0;
      }
    }
    .offset-#{$i} {
      margin-left: (col-width($i) + $gutter-size / 2) !important;
      &.nogutter {
        margin-left: col-width($i) !important;
      }
    }
    .push-#{$i} {
      margin-right: (col-width($i) + $gutter-size / 2) !important;
      &.nogutter {
        margin-right: col-width($i) !important;
      }
    }
  }
  /* ====== 5 COLUMN GRID WIDTHS ====== */
  @for $i from 1 through 5 {
    .col-5-#{$i} {
      width: 100% / 5 * $i - $gutter-size;
      margin-left: $gutter-size / 2;
      margin-right: $gutter-size / 2;
      /* === NO GUTTER === */
      &.nogutter {
        width: 100% / 5 * $i;
        margin-left: 0;
        margin-right: 0;
      }
    }
    .offset-5-#{$i} {
      margin-left: (100% / 5 * $i + $gutter-size / 2) !important;
      &.nogutter {
        margin-left: (100% / 5 * $i) !important;
      }
    }
    .push-5-#{$i} {
      margin-right: (100% / 5 * $i + $gutter-size / 2) !important;
      &.nogutter {
        margin-right: (100% / 5 * $i) !important;
      }
    }
  }
  .float-right {
    float: right;
  }
  .float-left {
    float: left;
  }
  .row:after {
    content: " ";
    clear: both;
    display: block;
    height: 0;
    visibility: hidden;
    font-size: 0;
  }
}
